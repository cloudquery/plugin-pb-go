// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: plugin-pb/specs/v1/spec.proto

package specs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WRITE_MODE int32

const (
	WRITE_MODE_WRITE_MODE_OVERWRITE_DELETE_STALE WRITE_MODE = 0
	WRITE_MODE_WRITE_MODE_OVERWRITE              WRITE_MODE = 1
	WRITE_MODE_WRITE_MODE_APPEND                 WRITE_MODE = 2
)

// Enum value maps for WRITE_MODE.
var (
	WRITE_MODE_name = map[int32]string{
		0: "WRITE_MODE_OVERWRITE_DELETE_STALE",
		1: "WRITE_MODE_OVERWRITE",
		2: "WRITE_MODE_APPEND",
	}
	WRITE_MODE_value = map[string]int32{
		"WRITE_MODE_OVERWRITE_DELETE_STALE": 0,
		"WRITE_MODE_OVERWRITE":              1,
		"WRITE_MODE_APPEND":                 2,
	}
)

func (x WRITE_MODE) Enum() *WRITE_MODE {
	p := new(WRITE_MODE)
	*p = x
	return p
}

func (x WRITE_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WRITE_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_pb_specs_v1_spec_proto_enumTypes[0].Descriptor()
}

func (WRITE_MODE) Type() protoreflect.EnumType {
	return &file_plugin_pb_specs_v1_spec_proto_enumTypes[0]
}

func (x WRITE_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WRITE_MODE.Descriptor instead.
func (WRITE_MODE) EnumDescriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{0}
}

type REGISTRY int32

const (
	REGISTRY_REGISTRY_GITHUB REGISTRY = 0
	REGISTRY_REGISTRY_GRPC   REGISTRY = 1
	REGISTRY_REGISTRY_LOCAL  REGISTRY = 2
)

// Enum value maps for REGISTRY.
var (
	REGISTRY_name = map[int32]string{
		0: "REGISTRY_GITHUB",
		1: "REGISTRY_GRPC",
		2: "REGISTRY_LOCAL",
	}
	REGISTRY_value = map[string]int32{
		"REGISTRY_GITHUB": 0,
		"REGISTRY_GRPC":   1,
		"REGISTRY_LOCAL":  2,
	}
)

func (x REGISTRY) Enum() *REGISTRY {
	p := new(REGISTRY)
	*p = x
	return p
}

func (x REGISTRY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (REGISTRY) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_pb_specs_v1_spec_proto_enumTypes[1].Descriptor()
}

func (REGISTRY) Type() protoreflect.EnumType {
	return &file_plugin_pb_specs_v1_spec_proto_enumTypes[1]
}

func (x REGISTRY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use REGISTRY.Descriptor instead.
func (REGISTRY) EnumDescriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{1}
}

type MIGRATE_MODE int32

const (
	MIGRATE_MODE_SAFE  MIGRATE_MODE = 0
	MIGRATE_MODE_FORCE MIGRATE_MODE = 1
)

// Enum value maps for MIGRATE_MODE.
var (
	MIGRATE_MODE_name = map[int32]string{
		0: "SAFE",
		1: "FORCE",
	}
	MIGRATE_MODE_value = map[string]int32{
		"SAFE":  0,
		"FORCE": 1,
	}
)

func (x MIGRATE_MODE) Enum() *MIGRATE_MODE {
	p := new(MIGRATE_MODE)
	*p = x
	return p
}

func (x MIGRATE_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIGRATE_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_pb_specs_v1_spec_proto_enumTypes[2].Descriptor()
}

func (MIGRATE_MODE) Type() protoreflect.EnumType {
	return &file_plugin_pb_specs_v1_spec_proto_enumTypes[2]
}

func (x MIGRATE_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIGRATE_MODE.Descriptor instead.
func (MIGRATE_MODE) EnumDescriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{2}
}

type PK_MODE int32

const (
	PK_MODE_DEFAULT    PK_MODE = 0
	PK_MODE_CQ_ID_ONLY PK_MODE = 1
)

// Enum value maps for PK_MODE.
var (
	PK_MODE_name = map[int32]string{
		0: "DEFAULT",
		1: "CQ_ID_ONLY",
	}
	PK_MODE_value = map[string]int32{
		"DEFAULT":    0,
		"CQ_ID_ONLY": 1,
	}
)

func (x PK_MODE) Enum() *PK_MODE {
	p := new(PK_MODE)
	*p = x
	return p
}

func (x PK_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PK_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_pb_specs_v1_spec_proto_enumTypes[3].Descriptor()
}

func (PK_MODE) Type() protoreflect.EnumType {
	return &file_plugin_pb_specs_v1_spec_proto_enumTypes[3]
}

func (x PK_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PK_MODE.Descriptor instead.
func (PK_MODE) EnumDescriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{3}
}

type SCHEDULER int32

const (
	SCHEDULER_SCHEDULER_DFS         SCHEDULER = 0
	SCHEDULER_SCHEDULER_ROUND_ROBIN SCHEDULER = 1
)

// Enum value maps for SCHEDULER.
var (
	SCHEDULER_name = map[int32]string{
		0: "SCHEDULER_DFS",
		1: "SCHEDULER_ROUND_ROBIN",
	}
	SCHEDULER_value = map[string]int32{
		"SCHEDULER_DFS":         0,
		"SCHEDULER_ROUND_ROBIN": 1,
	}
)

func (x SCHEDULER) Enum() *SCHEDULER {
	p := new(SCHEDULER)
	*p = x
	return p
}

func (x SCHEDULER) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCHEDULER) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_pb_specs_v1_spec_proto_enumTypes[4].Descriptor()
}

func (SCHEDULER) Type() protoreflect.EnumType {
	return &file_plugin_pb_specs_v1_spec_proto_enumTypes[4]
}

func (x SCHEDULER) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCHEDULER.Descriptor instead.
func (SCHEDULER) EnumDescriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{4}
}

type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Registry    REGISTRY   `protobuf:"varint,2,opt,name=registry,proto3,enum=cloudquery.specs.v1.REGISTRY" json:"registry,omitempty"`
	Path        string     `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Version     string     `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	SyncSpec    *SyncSpec  `protobuf:"bytes,5,opt,name=sync_spec,json=syncSpec,proto3" json:"sync_spec,omitempty"`
	WriteSpec   *WriteSpec `protobuf:"bytes,6,opt,name=write_spec,json=writeSpec,proto3" json:"write_spec,omitempty"`
	BackendSpec *Spec      `protobuf:"bytes,7,opt,name=backend_spec,json=backendSpec,proto3" json:"backend_spec,omitempty"`
	Spec        []byte     `protobuf:"bytes,8,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *Spec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spec) GetRegistry() REGISTRY {
	if x != nil {
		return x.Registry
	}
	return REGISTRY_REGISTRY_GITHUB
}

func (x *Spec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Spec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Spec) GetSyncSpec() *SyncSpec {
	if x != nil {
		return x.SyncSpec
	}
	return nil
}

func (x *Spec) GetWriteSpec() *WriteSpec {
	if x != nil {
		return x.WriteSpec
	}
	return nil
}

func (x *Spec) GetBackendSpec() *Spec {
	if x != nil {
		return x.BackendSpec
	}
	return nil
}

func (x *Spec) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type WriteSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteMode      WRITE_MODE   `protobuf:"varint,1,opt,name=write_mode,json=writeMode,proto3,enum=cloudquery.specs.v1.WRITE_MODE" json:"write_mode,omitempty"`
	MigrateMode    MIGRATE_MODE `protobuf:"varint,2,opt,name=migrate_mode,json=migrateMode,proto3,enum=cloudquery.specs.v1.MIGRATE_MODE" json:"migrate_mode,omitempty"`
	BatchSize      uint64       `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BatchSizeBytes uint64       `protobuf:"varint,4,opt,name=batch_size_bytes,json=batchSizeBytes,proto3" json:"batch_size_bytes,omitempty"`
	PkMode         PK_MODE      `protobuf:"varint,5,opt,name=pk_mode,json=pkMode,proto3,enum=cloudquery.specs.v1.PK_MODE" json:"pk_mode,omitempty"`
}

func (x *WriteSpec) Reset() {
	*x = WriteSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSpec) ProtoMessage() {}

func (x *WriteSpec) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSpec.ProtoReflect.Descriptor instead.
func (*WriteSpec) Descriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *WriteSpec) GetWriteMode() WRITE_MODE {
	if x != nil {
		return x.WriteMode
	}
	return WRITE_MODE_WRITE_MODE_OVERWRITE_DELETE_STALE
}

func (x *WriteSpec) GetMigrateMode() MIGRATE_MODE {
	if x != nil {
		return x.MigrateMode
	}
	return MIGRATE_MODE_SAFE
}

func (x *WriteSpec) GetBatchSize() uint64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *WriteSpec) GetBatchSizeBytes() uint64 {
	if x != nil {
		return x.BatchSizeBytes
	}
	return 0
}

func (x *WriteSpec) GetPkMode() PK_MODE {
	if x != nil {
		return x.PkMode
	}
	return PK_MODE_DEFAULT
}

type SyncSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables           []string  `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	SkipTables       []string  `protobuf:"bytes,2,rep,name=skip_tables,json=skipTables,proto3" json:"skip_tables,omitempty"`
	Destinations     []string  `protobuf:"bytes,3,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Concurrency      uint64    `protobuf:"varint,4,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Scheduler        SCHEDULER `protobuf:"varint,5,opt,name=scheduler,proto3,enum=cloudquery.specs.v1.SCHEDULER" json:"scheduler,omitempty"`
	DetrministicCqId bool      `protobuf:"varint,6,opt,name=detrministic_cq_id,json=detrministicCqId,proto3" json:"detrministic_cq_id,omitempty"`
}

func (x *SyncSpec) Reset() {
	*x = SyncSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSpec) ProtoMessage() {}

func (x *SyncSpec) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_pb_specs_v1_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSpec.ProtoReflect.Descriptor instead.
func (*SyncSpec) Descriptor() ([]byte, []int) {
	return file_plugin_pb_specs_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *SyncSpec) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *SyncSpec) GetSkipTables() []string {
	if x != nil {
		return x.SkipTables
	}
	return nil
}

func (x *SyncSpec) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *SyncSpec) GetConcurrency() uint64 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *SyncSpec) GetScheduler() SCHEDULER {
	if x != nil {
		return x.Scheduler
	}
	return SCHEDULER_SCHEDULER_DFS
}

func (x *SyncSpec) GetDetrministicCqId() bool {
	if x != nil {
		return x.DetrministicCqId
	}
	return false
}

var File_plugin_pb_specs_v1_spec_proto protoreflect.FileDescriptor

var file_plugin_pb_specs_v1_spec_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x70, 0x62, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x22, 0xd0, 0x02, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x52, 0x59, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x91, 0x02, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3e, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x0b,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4b, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x52, 0x06, 0x70, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x08,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x74, 0x72, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x63, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x64, 0x65, 0x74, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x43,
	0x71, 0x49, 0x64, 0x2a, 0x64, 0x0a, 0x0a, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x12, 0x25, 0x0a, 0x21, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x4f, 0x56, 0x45, 0x52, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x52, 0x49, 0x54,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x2a, 0x46, 0x0a, 0x08, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x52, 0x59, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52,
	0x59, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10,
	0x02, 0x2a, 0x23, 0x0a, 0x0c, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x46, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x4f, 0x52, 0x43, 0x45, 0x10, 0x01, 0x2a, 0x26, 0x0a, 0x07, 0x50, 0x4b, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x51, 0x5f, 0x49, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x2a, 0x39,
	0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x44, 0x46, 0x53, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x62, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_pb_specs_v1_spec_proto_rawDescOnce sync.Once
	file_plugin_pb_specs_v1_spec_proto_rawDescData = file_plugin_pb_specs_v1_spec_proto_rawDesc
)

func file_plugin_pb_specs_v1_spec_proto_rawDescGZIP() []byte {
	file_plugin_pb_specs_v1_spec_proto_rawDescOnce.Do(func() {
		file_plugin_pb_specs_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_pb_specs_v1_spec_proto_rawDescData)
	})
	return file_plugin_pb_specs_v1_spec_proto_rawDescData
}

var file_plugin_pb_specs_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_plugin_pb_specs_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_plugin_pb_specs_v1_spec_proto_goTypes = []interface{}{
	(WRITE_MODE)(0),   // 0: cloudquery.specs.v1.WRITE_MODE
	(REGISTRY)(0),     // 1: cloudquery.specs.v1.REGISTRY
	(MIGRATE_MODE)(0), // 2: cloudquery.specs.v1.MIGRATE_MODE
	(PK_MODE)(0),      // 3: cloudquery.specs.v1.PK_MODE
	(SCHEDULER)(0),    // 4: cloudquery.specs.v1.SCHEDULER
	(*Spec)(nil),      // 5: cloudquery.specs.v1.Spec
	(*WriteSpec)(nil), // 6: cloudquery.specs.v1.WriteSpec
	(*SyncSpec)(nil),  // 7: cloudquery.specs.v1.SyncSpec
}
var file_plugin_pb_specs_v1_spec_proto_depIdxs = []int32{
	1, // 0: cloudquery.specs.v1.Spec.registry:type_name -> cloudquery.specs.v1.REGISTRY
	7, // 1: cloudquery.specs.v1.Spec.sync_spec:type_name -> cloudquery.specs.v1.SyncSpec
	6, // 2: cloudquery.specs.v1.Spec.write_spec:type_name -> cloudquery.specs.v1.WriteSpec
	5, // 3: cloudquery.specs.v1.Spec.backend_spec:type_name -> cloudquery.specs.v1.Spec
	0, // 4: cloudquery.specs.v1.WriteSpec.write_mode:type_name -> cloudquery.specs.v1.WRITE_MODE
	2, // 5: cloudquery.specs.v1.WriteSpec.migrate_mode:type_name -> cloudquery.specs.v1.MIGRATE_MODE
	3, // 6: cloudquery.specs.v1.WriteSpec.pk_mode:type_name -> cloudquery.specs.v1.PK_MODE
	4, // 7: cloudquery.specs.v1.SyncSpec.scheduler:type_name -> cloudquery.specs.v1.SCHEDULER
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_plugin_pb_specs_v1_spec_proto_init() }
func file_plugin_pb_specs_v1_spec_proto_init() {
	if File_plugin_pb_specs_v1_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_pb_specs_v1_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_pb_specs_v1_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_pb_specs_v1_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_pb_specs_v1_spec_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_pb_specs_v1_spec_proto_goTypes,
		DependencyIndexes: file_plugin_pb_specs_v1_spec_proto_depIdxs,
		EnumInfos:         file_plugin_pb_specs_v1_spec_proto_enumTypes,
		MessageInfos:      file_plugin_pb_specs_v1_spec_proto_msgTypes,
	}.Build()
	File_plugin_pb_specs_v1_spec_proto = out.File
	file_plugin_pb_specs_v1_spec_proto_rawDesc = nil
	file_plugin_pb_specs_v1_spec_proto_goTypes = nil
	file_plugin_pb_specs_v1_spec_proto_depIdxs = nil
}
